############################
# Commit Message Structure #
############################
# [TYPE] Subject
# body -optional
# (#issue-number)
###########################

################
# 제목(subject)을 아랫줄에 작성

################
# 본문(body)을 아랫줄에 작성

################
# 꼬릿말(footer)을 아랫줄에 작성 (관련된 이슈 번호 등 추가)


################
# Subject      #
################
# 제목은 최대 50글자가 넘지 않도록 하고 마침표 및 특수기호는 사용하지 않는다.
# 영문으로 표기하는 경우 동사(원형)을 가장 앞에 두고 첫 글자는 대문자로 표기한다. (과거 시제를 사용하지 않는다.)
# 제목은 개조식 구문(완전한 서술형 문장이 아닌, 간결하고 요점적인 서술)으로 작성한다.
#################

################
# Body  	   #
################
# 한 줄 당 72자 내로 작성한다.
# 양에 구애받지 않고 최대한 상세히 작성한다.
# 어떻게 변경했는지 보다 무엇을 변경했는지, 왜 변경했는지를 설명한다.
#################


################
# footer  	   #
################
# 꼬리말은 optional이고 이슈 트래커 ID를 작성한다.
# 형식은 (유형: #이슈 번호)이다.
# 이슈 트래커 유형이 여러 개일 경우 슬래시(/)로 구분한다.
# 여러 개의 이슈 번호를 적을 떄는 쉼표(,)로 구분한다.
# 이슈 트래커 유형은 다음 중 하나를 사용한다. (optional)
# Fixes : 이슈 수정중 (아직 해결되기 않은 경우)
# Resolves : 이슈를 해결했을 때 사용
# Related to : 해당 커밋에 관련된 이슈 번호 (아직 해결되지 않은 경우)
# Ref : 참고할 이슈가 있을 때 사용
################

################
# Commit Type  #
################
# ADD: 단순 업로드(파일 및 폴더 추가)
# FEAT : 새로운 기능 추가
# FIX : 버그 수정
# DOCS : 문서 수정
# STYLE : 코드 포맷팅, 세미콜론 추가, 코드 내용 변경이 없는 수정
# REFACTOR : 코드 리팩토링
# TEST : 테스트 코드 및 리팩토링 테스트 코드 추가
# CHORE : 빌드 업무 수정, 패키지 매니저 수정 등 잡무
################

##################
# Commit example #
##################
#[FEAT] 회원 가입 기능 구현
#
#SMS, 이메일 중복확인 API 개발
#
#(Resolves: #123 / Ref: #456 / Related to: #48, #45)
##################
